{"version":3,"sources":["Search.js","helpers/services.js","Watch.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","search","alignContent","textAlign","subtitle","textField","marginLeft","spacing","marginRight","width","Search","classes","Fragment","Typography","component","variant","color","className","TextField","label","id","defaultValue","helperText","margin","Button","config","require","getServices","a","url","services_api","axios","get","response","data","getServicesYouTubeVideos","video_api","items","card","position","media","height","overlay","fontWeight","top","left","backgroundColor","video","maxWidth","Watch","props","services","videos","useState","dialog_open","setDialogOpen","video_url","setVideoUrl","handlePlayVideo","video_id","replace","videos_bydate","reduce","rv","x","datetime","Date","date","getFullYear","getMonth","getDate","push","services_byyoutubeid","forEach","service","Object","keys","map","idx","key","ListSubheader","disableSticky","moment","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","Grid","container","item","custom_els","custom_elements","media_thumbnail","filter","channel_id","service_yt_data","youtube_url","type","substring","serviceHelper","xs","sm","md","lg","xl","Card","CardMedia","image","_attr","title","CardContent","CardActions","size","startIcon","onClick","bind","guid","target","href","Divider","Dialog","onClose","aria-labelledby","open","src","frameborder","allow","createMuiTheme","palette","primary","lightBlue","secondary","blueGrey","overrides","MuiButton","text","textTransform","MuiTab","root","button","content","flexGrow","padding","App","setVideos","setServices","useEffect","services_data","video_data","fetchServices","fetchVideos","ThemeProvider","CssBaseline","Container","AppBar","elevation","Toolbar","Link","to","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1486cb2c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    alignContent: 'center',\r\n    textAlign: 'center'\r\n  },\r\n  subtitle: {\r\n    textAlign: 'center'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '25ch'\r\n  }\r\n}));\r\n\r\nfunction Search() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography component=\"h2\" variant=\"h3\" color=\"secondary\" className={classes.subtitle}>Search</Typography>\r\n      <div className={classes.search}>\r\n        <TextField\r\n          label=\"Postcode\"\r\n          id=\"txt_postcode\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          helperText=\"Enter your postcode\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n        <br />\r\n        <Button variant=\"outlined\" color=\"primary\">Go</Button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Search;","import axios from 'axios';\r\n\r\nconst config = require('./config.json');\r\n\r\nexport async function getServices() {\r\n  let url = config.services_api;\r\n  let response = await axios.get(url);\r\n  if (response && response.data) return response.data;\r\n  return [];\r\n}\r\n\r\nexport function getServiceYouTubeDataFromId(id) {\r\n  const youtube_url = config.youtube_url;\r\n  const id_types = {\r\n    'UC': ['channel/', 'Channel'],\r\n    'PL': ['playlist/', 'Playlist']\r\n  };\r\n  const type = id_types[id.substring(0, 2)];\r\n  return {\r\n    url: youtube_url + (type ? type[0] : 'user/') + id,\r\n    type: (type ? type[1] : 'Account')\r\n  };\r\n}\r\n\r\nexport async function getServicesYouTubeVideos() {\r\n  let url = config.video_api;\r\n  let response = await axios.get(url);\r\n  if (response && response.data) return response.data.items;\r\n  return [];\r\n}","import React, { useState } from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport MovieIcon from '@material-ui/icons/MovieTwoTone';\r\nimport PlaylistPlay from '@material-ui/icons/PlaylistPlayTwoTone';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport * as serviceHelper from './helpers/services';\r\n\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subtitle: {\r\n    textAlign: 'center'\r\n  },\r\n  card: {\r\n    position: 'relative',\r\n  },\r\n  media: {\r\n    height: 150\r\n  },\r\n  overlay: {\r\n    fontWeight: 500,\r\n    color: '#ffffff',\r\n    position: 'absolute',\r\n    top: '0px',\r\n    left: '0px',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n    width: '100%'\r\n  },\r\n  video: {\r\n    maxWidth: '100%'\r\n  }\r\n}));\r\n\r\nfunction Watch(props) {\r\n  const { services, videos } = props;\r\n  const [dialog_open, setDialogOpen] = useState(false);\r\n  const [video_url, setVideoUrl] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleCloseVideoDialog = () => {\r\n    setDialogOpen(false);\r\n    setVideoUrl('');\r\n  };\r\n\r\n  const handlePlayVideo = (video_id) => {\r\n    setDialogOpen(true);\r\n    setVideoUrl('https://www.youtube.com/embed/' + video_id.replace('yt:video:', ''));\r\n  };\r\n\r\n  const videos_bydate = videos.reduce(function (rv, x) {\r\n    let datetime = new Date(x['date']);\r\n    let date = datetime.getFullYear() + '-' + (datetime.getMonth() + 1) + '-' + datetime.getDate();\r\n    (rv[date] = rv[date] || []).push(x);\r\n    return rv;\r\n  }, {});\r\n\r\n  const services_byyoutubeid = {}\r\n  services.forEach(service => {\r\n    if (service['YouTube ID']) services_byyoutubeid[service['YouTube ID']] = service;\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography component=\"h2\" variant=\"h3\" color=\"secondary\" className={classes.subtitle}>Library TV</Typography>\r\n      {Object.keys(videos_bydate).map((date, idx) => {\r\n        return <React.Fragment key={'frg_dates_' + idx}>\r\n          <ListSubheader component=\"div\" disableSticky>{moment(date).calendar(null, {\r\n            lastDay: '[From yesterday]',\r\n            sameDay: '[New in today]',\r\n            nextDay: '[Tomorrow]',\r\n            lastWeek: '[Last] dddd',\r\n            nextWeek: 'dddd',\r\n            sameElse: 'L'\r\n          })}</ListSubheader>\r\n          <Grid container spacing={3}>\r\n            {videos_bydate[date].map((item, idx) => {\r\n              const custom_els = item.custom_elements;\r\n              const media_group = custom_els.filter(x => Object.keys(x)[0] === 'media:group')[0]['media:group'];\r\n              const media_thumbnail = media_group.filter(x => Object.keys(x)[0] === 'media:thumbnail')[0]['media:thumbnail'];\r\n              const channel_id = custom_els.filter(x => Object.keys(x)[0] === 'yt:channelid')[0]['yt:channelid'];\r\n              const service = services_byyoutubeid[channel_id];\r\n              const service_yt_data = serviceHelper.getServiceYouTubeDataFromId(channel_id);\r\n              return <Grid\r\n                key={'grd_vids_' + idx}\r\n                item xs={12} sm={6} md={4} lg={4} xl={3}>\r\n                <Card variant=\"outlined\" className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image={media_thumbnail._attr['url']}\r\n                    title={item.title}\r\n                  />\r\n                  <CardContent className={classes.overlay}>\r\n                    <Typography variant=\"caption\" component=\"p\">{item.title}</Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" startIcon={<MovieIcon />} onClick={handlePlayVideo.bind(this, item.guid)}>Play</Button>\r\n                    {service ? <Button size=\"small\" color=\"primary\" startIcon={<PlaylistPlay />} target=\"_blank\" href={service_yt_data.url}>{service_yt_data.type}</Button> : null}\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            })}\r\n          </Grid>\r\n          <br />\r\n          <Divider />\r\n          <br />\r\n        </React.Fragment>\r\n      })}\r\n      <Dialog maxWidth=\"sm\" onClose={handleCloseVideoDialog} aria-labelledby=\"YouTube dialog\" open={dialog_open}>\r\n        <iframe title=\"Video\" className={classes.video} width=\"560\" height=\"315\" src={video_url} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Watch;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\n\r\nimport SearchIcon from '@material-ui/icons/SearchTwoTone';\r\nimport MovieIcon from '@material-ui/icons/MovieTwoTone';\r\nimport BookIcon from '@material-ui/icons/BookTwoTone';\r\nimport HeadsetIcon from '@material-ui/icons/HeadsetTwoTone';\r\n\r\nimport Search from './Search';\r\nimport Watch from './Watch';\r\n\r\nimport * as serviceHelper from './helpers/services';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: lightBlue,\r\n    secondary: blueGrey\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      text: {\r\n        textTransform: 'none'\r\n      }\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2)\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const [videos, setVideos] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchServices() {\r\n      const services_data = await serviceHelper.getServices();\r\n      setServices(services_data);\r\n    }\r\n    async function fetchVideos() {\r\n      const video_data = await serviceHelper.getServicesYouTubeVideos();\r\n      setVideos(video_data);\r\n    }\r\n    fetchServices();\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <Container maxWidth=\"lg\">\r\n            <Typography color=\"secondary\" variant=\"h4\" component=\"h1\" className={classes.title}>Libraries at home</Typography>\r\n          </Container>\r\n          <AppBar position=\"static\" color=\"default\" elevation={0}>\r\n            <Container maxWidth=\"lg\">\r\n              <Toolbar>\r\n                <Button size=\"large\" className={classes.button} component={Link} to=\"/\" color=\"primary\" onClick={() => { }} startIcon={<SearchIcon />}>Search</Button>\r\n                <Button size=\"large\" className={classes.button} component={Link} to=\"/watch\" color=\"primary\" onClick={() => { }} startIcon={<MovieIcon />}>Watch</Button>\r\n                <Button size=\"large\" className={classes.button} component={Link} to=\"/read\" color=\"primary\" onClick={() => { }} startIcon={<BookIcon />}>Read</Button>\r\n                <Button size=\"large\" className={classes.button} component={Link} to=\"/listen\" color=\"primary\" onClick={() => { }} startIcon={<HeadsetIcon />}>Listen</Button>\r\n              </Toolbar>\r\n            </Container>\r\n          </AppBar>\r\n\r\n          <Container maxWidth=\"lg\">\r\n            <main className={classes.content}>\r\n              <Route\r\n                path='/'\r\n                exact\r\n                render={() => {\r\n                  return <Search />\r\n                }}\r\n              />\r\n              <Route\r\n                path='/watch'\r\n                exact\r\n                render={() => {\r\n                  return <Watch services={services} videos={videos} />\r\n                }}\r\n              />\r\n            </main>\r\n          </Container>\r\n        </div>\r\n      </BrowserRouter>\r\n    </ThemeProvider >\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'typeface-roboto';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}