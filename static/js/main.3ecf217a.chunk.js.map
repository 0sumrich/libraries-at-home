{"version":3,"sources":["serviceWorker.js","Service.js","helpers/postcodes.js","Search.js","helpers/services.js","Watch.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","config","require","useStyles","makeStyles","theme","root","paddingTop","spacing","serviceName","fontWeight","leadButton","marginTop","linkContainer","padding","linkText","Service","props","service","classes","className","Typography","component","variant","color","Name","Grid","container","services_text","library_service","filter","s","field","map","library","idx","key","item","xs","sm","md","lg","xl","Alert","severity","AlertTitle","title","replace","description","Button","size","startIcon","target","href","link_text","Paper","service_links","link","Fragment","Link","text","getPostcodeData","postcode","a","url","postcode_api","axios","get","response","data","getServiceDataFromPostcode","services","postcode_data","services_filtered","Code","length","search","alignContent","textAlign","subtitle","textField","marginLeft","marginRight","width","Search","useState","loading","setloading","setPostcode","error_message","setErrorMessage","setService","validatePostcode","pc","test","handlePostcodeSearch","postcodeHelper","TextField","error","label","id","margin","value","onChange","e","val","toUpperCase","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","LinearProgress","Object","keys","getServices","services_api","getServicesYouTubeVideos","video_api","items","card","media","height","overlay","top","left","backgroundColor","video","maxWidth","Watch","videos","dialog_open","setDialogOpen","video_url","setVideoUrl","handlePlayVideo","video_id","videos_bydate","reduce","rv","x","datetime","Date","date","getFullYear","getMonth","getDate","push","services_byyoutubeid","forEach","ListSubheader","disableSticky","moment","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","custom_els","custom_elements","media_thumbnail","channel_id","service_yt_data","youtube_url","type","substring","serviceHelper","Card","CardMedia","image","_attr","CardContent","CardActions","bind","guid","Dialog","onClose","aria-labelledby","open","src","frameborder","allow","createMuiTheme","palette","primary","lightBlue","secondary","blueGrey","overrides","MuiButton","textTransform","MuiTab","button","content","flexGrow","App","loading_services","setLoadingServices","loading_videos","setLoadingVideos","setVideos","setServices","useEffect","services_data","video_data","fetchServices","fetchVideos","ThemeProvider","CssBaseline","Container","AppBar","elevation","Toolbar","to","path","exact","render","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3ecf217a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNewTwoTone';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nconst config = require('./helpers/config.json');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  serviceName: {\r\n    fontWeight: 500\r\n  },\r\n  leadButton: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  linkContainer: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(3)\r\n  },\r\n  linkText: {\r\n\r\n  }\r\n}));\r\n\r\nfunction Service(props) {\r\n  const { service } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography component=\"h2\" variant=\"h5\" color=\"secondary\">{'Your local library service is '}<span className={classes.serviceName}>{service.Name}</span></Typography>\r\n      <br />\r\n      <Grid container spacing={3}>\r\n        {config.services_text.library_service.filter(s => s.field in service).map((library, idx) => {\r\n          return <Grid key={'grd_service_' + idx} item xs={12} sm={6} md={4} lg={4} xl={3}>\r\n            <Alert severity=\"info\">\r\n              <AlertTitle>{library.title.replace('[service]', service.Name)}</AlertTitle>\r\n              {library.description}<br />\r\n              <Button className={classes.leadButton} variant=\"outlined\" size=\"large\" color=\"primary\" startIcon={<OpenInNewIcon />} target=\"_blank\" href={service[library.field]}>{library.link_text}</Button>\r\n            </Alert>\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n      <Paper variant=\"outlined\" className={classes.linkContainer}>\r\n        <Typography component=\"h3\" variant=\"h6\" color=\"secondary\">Useful links</Typography>\r\n        <Typography component=\"p\" variant=\"body1\" className={classes.linkText}>\r\n        {config.services_text.service_links.filter(s => s.field in service).map((link, idx) => {\r\n          return <React.Fragment>\r\n            <Link key={'typ_link_' + idx} href={service[link.field]} variant=\"body1\">{link.text}</Link><br />\r\n          </React.Fragment>\r\n        })}\r\n        </Typography>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Service;","import axios from 'axios';\r\n\r\nconst config = require('./config.json');\r\n\r\nexport async function getPostcodeData(postcode) {\r\n  let url = config.postcode_api + postcode.replace(/\\s/g, '');\r\n  let response = await axios.get(url);\r\n  if (response && response.data) return response.data;\r\n  return {};\r\n}\r\n\r\nexport async function getServiceDataFromPostcode(postcode, services) {\r\n  let postcode_data = await getPostcodeData(postcode);\r\n  let services_filtered = services.filter(s => s.Code === postcode_data.library_service);\r\n  if (services_filtered.length > 0) return services_filtered[0];\r\n  return {};\r\n}","import React, { useState } from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SearchIcon from '@material-ui/icons/SearchTwoTone';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Service from './Service';\r\n\r\nimport * as postcodeHelper from './helpers/postcodes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    alignContent: 'center',\r\n    textAlign: 'center'\r\n  },\r\n  subtitle: {\r\n    textAlign: 'center'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '25ch'\r\n  }\r\n}));\r\n\r\nfunction Search(props) {\r\n  const { services } = props;\r\n  const [loading, setloading] = useState(false);\r\n  const [postcode, setPostcode] = useState('');\r\n  const [error_message, setErrorMessage] = useState('');\r\n  const [service, setService] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const validatePostcode = (pc) => /^[A-Z]{1,2}\\d[A-Z\\d]? ?\\d[A-Z]{2}$/.test(pc);\r\n\r\n  const handlePostcodeSearch = async () => {\r\n    setloading(true);\r\n    if (validatePostcode(postcode)) {\r\n      const service = await postcodeHelper.getServiceDataFromPostcode(postcode, services);\r\n      setService(service);\r\n    } else {\r\n      setErrorMessage('Is that a UK postcode?');\r\n    }\r\n    setloading(false);\r\n  }\r\n\r\n  const handlePostcodeChange = (e) => {\r\n    const val = e.target.value;\r\n    if (error_message !== '' && validatePostcode(val)) setErrorMessage('');\r\n    setPostcode(e.target.value.toUpperCase());\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography component=\"h2\" variant=\"h6\" color=\"secondary\" className={classes.subtitle}>Find your library service</Typography>\r\n      <div className={classes.search}>\r\n        <TextField\r\n          error={error_message !== ''}\r\n          label=\"Postcode\"\r\n          id=\"txt_postcode\"\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          value={postcode}\r\n          onChange={handlePostcodeChange}\r\n          helperText={error_message}\r\n          InputProps={{\r\n            endAdornment: (<InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"search for postcode\"\r\n                onClick={handlePostcodeSearch}\r\n              >\r\n                <SearchIcon color=\"primary\" />\r\n              </IconButton>\r\n            </InputAdornment>)\r\n          }}\r\n        />\r\n      </div>\r\n      {loading ? <LinearProgress color=\"secondary\" /> : null}\r\n      {Object.keys(service).length > 0 ?\r\n        <div>\r\n          <Service service={service} />\r\n        </div>\r\n        : null}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Search;","import axios from 'axios';\r\n\r\nconst config = require('./config.json');\r\n\r\nexport async function getServices() {\r\n  let url = config.services_api;\r\n  let response = await axios.get(url);\r\n  if (response && response.data) return response.data;\r\n  return [];\r\n}\r\n\r\nexport function getServiceYouTubeDataFromId(id) {\r\n  const youtube_url = config.youtube_url;\r\n  const id_types = {\r\n    'UC': ['channel/', 'Channel'],\r\n    'PL': ['playlist/', 'Playlist']\r\n  };\r\n  const type = id_types[id.substring(0, 2)];\r\n  return {\r\n    url: youtube_url + (type ? type[0] : 'user/') + id,\r\n    type: (type ? type[1] : 'Account')\r\n  };\r\n}\r\n\r\nexport async function getServicesYouTubeVideos() {\r\n  let url = config.video_api;\r\n  let response = await axios.get(url);\r\n  if (response && response.data) return response.data.items;\r\n  return [];\r\n}","import React, { useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport MovieIcon from '@material-ui/icons/MovieTwoTone';\r\nimport PlaylistPlay from '@material-ui/icons/PlaylistPlayTwoTone';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport moment from 'moment';\r\n\r\nimport * as serviceHelper from './helpers/services';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subtitle: {\r\n    textAlign: 'center'\r\n  },\r\n  card: {\r\n    position: 'relative',\r\n  },\r\n  media: {\r\n    height: 150\r\n  },\r\n  overlay: {\r\n    fontWeight: 500,\r\n    color: '#ffffff',\r\n    position: 'absolute',\r\n    top: '0px',\r\n    left: '0px',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n    width: '100%'\r\n  },\r\n  video: {\r\n    maxWidth: '100%'\r\n  }\r\n}));\r\n\r\nfunction Watch(props) {\r\n  const { services, videos } = props;\r\n  const [dialog_open, setDialogOpen] = useState(false);\r\n  const [video_url, setVideoUrl] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleCloseVideoDialog = () => {\r\n    setDialogOpen(false);\r\n    setVideoUrl('');\r\n  };\r\n\r\n  const handlePlayVideo = (video_id) => {\r\n    setDialogOpen(true);\r\n    setVideoUrl('https://www.youtube.com/embed/' + video_id.replace('yt:video:', ''));\r\n  };\r\n\r\n  const videos_bydate = videos.reduce(function (rv, x) {\r\n    let datetime = new Date(x['date']);\r\n    let date = datetime.getFullYear() + '-' + (datetime.getMonth() + 1) + '-' + datetime.getDate();\r\n    (rv[date] = rv[date] || []).push(x);\r\n    return rv;\r\n  }, {});\r\n\r\n  const services_byyoutubeid = {}\r\n  services.forEach(service => {\r\n    if (service['YouTube ID']) services_byyoutubeid[service['YouTube ID']] = service;\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography component=\"h2\" variant=\"h6\" color=\"secondary\" className={classes.subtitle}>Watch library TV</Typography>\r\n      {Object.keys(videos_bydate).map((date, idx) => {\r\n        return <React.Fragment key={'frg_dates_' + idx}>\r\n          <ListSubheader component=\"div\" disableSticky>{moment(date, 'YYYY-MM-DD').calendar(null, {\r\n            lastDay: '[From yesterday]',\r\n            sameDay: '[New in today]',\r\n            nextDay: '[Tomorrow]',\r\n            lastWeek: '[Last] dddd',\r\n            nextWeek: 'dddd',\r\n            sameElse: 'L'\r\n          })}</ListSubheader>\r\n          <Grid container spacing={3}>\r\n            {videos_bydate[date].map((item, idx) => {\r\n              const custom_els = item.custom_elements;\r\n              const media_group = custom_els.filter(x => Object.keys(x)[0] === 'media:group')[0]['media:group'];\r\n              const media_thumbnail = media_group.filter(x => Object.keys(x)[0] === 'media:thumbnail')[0]['media:thumbnail'];\r\n              const channel_id = custom_els.filter(x => Object.keys(x)[0] === 'yt:channelid')[0]['yt:channelid'];\r\n              const service = services_byyoutubeid[channel_id];\r\n              const service_yt_data = serviceHelper.getServiceYouTubeDataFromId(channel_id);\r\n              return <Grid\r\n                key={'grd_vids_' + idx}\r\n                item xs={12} sm={6} md={4} lg={4} xl={3}>\r\n                <Card variant=\"outlined\" className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image={media_thumbnail._attr['url']}\r\n                    title={item.title}\r\n                  />\r\n                  <CardContent className={classes.overlay}>\r\n                    <Typography variant=\"caption\" component=\"p\">{item.title}</Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" startIcon={<MovieIcon />} onClick={handlePlayVideo.bind(this, item.guid)}>Play</Button>\r\n                    {service ? <Button size=\"small\" color=\"primary\" startIcon={<PlaylistPlay />} target=\"_blank\" href={service_yt_data.url}>{service_yt_data.type}</Button> : null}\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            })}\r\n          </Grid>\r\n          <br />\r\n        </React.Fragment>\r\n      })}\r\n      <Dialog maxWidth=\"sm\" onClose={handleCloseVideoDialog} aria-labelledby=\"YouTube dialog\" open={dialog_open}>\r\n        <iframe title=\"Video\" className={classes.video} width=\"560\" height=\"315\" src={video_url} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Watch;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\n\r\nimport SearchIcon from '@material-ui/icons/SearchTwoTone';\r\nimport MovieIcon from '@material-ui/icons/MovieTwoTone';\r\nimport BookIcon from '@material-ui/icons/BookTwoTone';\r\nimport HeadsetIcon from '@material-ui/icons/HeadsetTwoTone';\r\n\r\nimport Search from './Search';\r\nimport Watch from './Watch';\r\n\r\nimport * as serviceHelper from './helpers/services';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: lightBlue,\r\n    secondary: blueGrey\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      text: {\r\n        textTransform: 'none'\r\n      }\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2)\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const [loading_services, setLoadingServices] = useState(false);\r\n  const [loading_videos, setLoadingVideos] = useState(false);\r\n  const [videos, setVideos] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchServices() {\r\n      setLoadingServices(true);\r\n      const services_data = await serviceHelper.getServices();\r\n      setServices(services_data);\r\n      setLoadingServices(false);\r\n    }\r\n    async function fetchVideos() {\r\n      setLoadingVideos(true);\r\n      const video_data = await serviceHelper.getServicesYouTubeVideos();\r\n      setVideos(video_data);\r\n      setLoadingVideos(false);\r\n    }\r\n    fetchServices();\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <Container maxWidth=\"lg\">\r\n            <Typography color=\"secondary\" variant=\"h4\" component=\"h1\" className={classes.title}>Libraries at home</Typography>\r\n          </Container>\r\n          <AppBar position=\"static\" color=\"default\" elevation={0}>\r\n            <Container maxWidth=\"lg\">\r\n              <Toolbar>\r\n                <Button size=\"large\" className={classes.button} component={Link} to=\"/\" color=\"primary\" onClick={() => { }} startIcon={<SearchIcon />}>Search</Button>\r\n                <Button size=\"large\" className={classes.button} component={Link} to=\"/watch\" color=\"primary\" onClick={() => { }} startIcon={<MovieIcon />}>Watch</Button>\r\n                <Button size=\"large\" className={classes.button} component={Link} to=\"/read\" color=\"primary\" onClick={() => { }} startIcon={<BookIcon />}>Read</Button>\r\n                <Button size=\"large\" className={classes.button} component={Link} to=\"/listen\" color=\"primary\" onClick={() => { }} startIcon={<HeadsetIcon />}>Listen</Button>\r\n              </Toolbar>\r\n            </Container>\r\n          </AppBar>\r\n          {loading_services || loading_videos ? <LinearProgress color=\"secondary\" /> : null}\r\n          <Container maxWidth=\"lg\">\r\n            <main className={classes.content}>\r\n              <Route\r\n                path='/'\r\n                exact\r\n                render={() => {\r\n                  return <Search services={services} />\r\n                }}\r\n              />\r\n              <Route\r\n                path='/watch'\r\n                exact\r\n                render={() => {\r\n                  return <Watch services={services} videos={videos} />\r\n                }}\r\n              />\r\n            </main>\r\n          </Container>\r\n        </div>\r\n      </BrowserRouter>\r\n    </ThemeProvider >\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'typeface-roboto';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}